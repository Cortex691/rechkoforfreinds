[{"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\index.js":"1","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\App.js":"2","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\pages\\GamePage.js":"3","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\pages\\StartPage.js":"4","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\prepis.js":"5","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Paragraph.js":"6","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\validWords.js":"7","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Note.js":"8","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Form.js":"9","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Button.js":"10","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Layout.js":"11","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\GameBoard.js":"12","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Keyboard.js":"13","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Modal.js":"14","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\constants\\constants.js":"15"},{"size":237,"mtime":1649542706248,"results":"16","hashOfConfig":"17"},{"size":450,"mtime":1649975273902,"results":"18","hashOfConfig":"17"},{"size":1000,"mtime":1650900224834,"results":"19","hashOfConfig":"17"},{"size":6721,"mtime":1664619826112,"results":"20","hashOfConfig":"17"},{"size":3442,"mtime":1650060353286,"results":"21","hashOfConfig":"17"},{"size":342,"mtime":1650900228879,"results":"22","hashOfConfig":"17"},{"size":117866,"mtime":1664613888949,"results":"23","hashOfConfig":"17"},{"size":159,"mtime":1649756490862,"results":"24","hashOfConfig":"17"},{"size":570,"mtime":1650900231276,"results":"25","hashOfConfig":"17"},{"size":339,"mtime":1650869926996,"results":"26","hashOfConfig":"17"},{"size":721,"mtime":1664619814974,"results":"27","hashOfConfig":"17"},{"size":6813,"mtime":1664622090198,"results":"28","hashOfConfig":"17"},{"size":1643,"mtime":1650311728123,"results":"29","hashOfConfig":"17"},{"size":787,"mtime":1664622218535,"results":"30","hashOfConfig":"17"},{"size":246,"mtime":1650310010850,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1w6e97j",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\index.js",[],["69","70"],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\App.js",[],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\pages\\GamePage.js",["71"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Layout from \"../components/Layout\";\r\nimport GameBoard from \"../components/GameBoard\";\r\nimport { encrypt } from \"../prepis\";\r\n\r\nconst GamePage = () => {\r\n  String.prototype.replaceArray = function (find, replace) {\r\n    var replaceString = this;\r\n    var regex;\r\n    for (var i = 0; i < find.length; i++) {\r\n      regex = new RegExp(find[i], \"g\");\r\n      replaceString = replaceString.replace(regex, replace[i]);\r\n    }\r\n    return replaceString;\r\n  };\r\n\r\n  const { wordId } = useParams();\r\n  const { name } = useParams();\r\n\r\n  console.log(wordId);\r\n\r\n  function decode(str) {\r\n    return str.replace(/.{3}/g, function (c) {\r\n      return String.fromCharCode(c);\r\n    });\r\n  }\r\n\r\n  const wordForDecode = decode(wordId);\r\n\r\n  const finalWord = encrypt(wordForDecode.toLowerCase());\r\n\r\n  return (\r\n    <Layout>\r\n      <GameBoard targetWord={finalWord} name={name} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\pages\\StartPage.js",[],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\prepis.js",["72"],"String.prototype.replaceArray = function (find, replace) {\r\n  var replaceString = this;\r\n  var regex;\r\n  for (var i = 0; i < find.length; i++) {\r\n    regex = new RegExp(find[i], \"g\");\r\n    replaceString = replaceString.replace(regex, replace[i]);\r\n  }\r\n  return replaceString;\r\n};\r\n\r\nexport const decrypt = (word) => {\r\n  var text = word;\r\n  var find = [\r\n    \"Џ\",\r\n    \"џ\",\r\n    \"Љ\",\r\n    \"љ\",\r\n    \"Њ\",\r\n    \"њ\",\r\n    \"Ђ\",\r\n    \"ђ\",\r\n    \"Ђ\",\r\n    \"ђ\",\r\n    \"а\",\r\n    \"б\",\r\n    \"в\",\r\n    \"г\",\r\n    \"д\",\r\n    \"е\",\r\n    \"ж\",\r\n    \"з\",\r\n    \"и\",\r\n    \"ј\",\r\n    \"к\",\r\n    \"л\",\r\n    \"љ\",\r\n    \"м\",\r\n    \"н\",\r\n    \"о\",\r\n    \"п\",\r\n    \"р\",\r\n    \"с\",\r\n    \"т\",\r\n    \"ћ\",\r\n    \"у\",\r\n    \"ф\",\r\n    \"х\",\r\n    \"ц\",\r\n    \"ч\",\r\n    \"ш\",\r\n    \"А\",\r\n    \"Б\",\r\n    \"В\",\r\n    \"Г\",\r\n    \"Д\",\r\n    \"Е\",\r\n    \"Ж\",\r\n    \"З\",\r\n    \"И\",\r\n    \"Ј\",\r\n    \"К\",\r\n    \"Л\",\r\n    \"Љ\",\r\n    \"М\",\r\n    \"Н\",\r\n    \"Њ\",\r\n    \"О\",\r\n    \"П\",\r\n    \"Р\",\r\n    \"С\",\r\n    \"Т\",\r\n    \"Ћ\",\r\n    \"У\",\r\n    \"Ф\",\r\n    \"Х\",\r\n    \"Ц\",\r\n    \"Ч\",\r\n    \"Џ\",\r\n    \"Ш\",\r\n  ];\r\n  var replace = [\r\n    \"Dž\",\r\n    \"dž\",\r\n    \"Lj\",\r\n    \"lj\",\r\n    \"Nj\",\r\n    \"nj\",\r\n    \"Đ\",\r\n    \"đ\",\r\n    \"Dj\",\r\n    \"dj\",\r\n    \"a\",\r\n    \"b\",\r\n    \"v\",\r\n    \"g\",\r\n    \"d\",\r\n    \"e\",\r\n    \"ž\",\r\n    \"z\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"lj\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"ć\",\r\n    \"u\",\r\n    \"f\",\r\n    \"h\",\r\n    \"c\",\r\n    \"č\",\r\n    \"š\",\r\n    \"A\",\r\n    \"B\",\r\n    \"V\",\r\n    \"G\",\r\n    \"D\",\r\n    \"E\",\r\n    \"Ž\",\r\n    \"Z\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"Lj\",\r\n    \"M\",\r\n    \"N\",\r\n    \"Nj\",\r\n    \"O\",\r\n    \"P\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"Ć\",\r\n    \"U\",\r\n    \"F\",\r\n    \"H\",\r\n    \"C\",\r\n    \"Č\",\r\n    \"Dž\",\r\n    \"Š\",\r\n  ];\r\n  text = text.replaceArray(find, replace);\r\n  return text;\r\n};\r\n\r\nexport const encrypt = (word) => {\r\n  var text = word;\r\n  var find = [\r\n    \"Dž\",\r\n    \"dž\",\r\n    \"Lj\",\r\n    \"lj\",\r\n    \"Nj\",\r\n    \"nj\",\r\n    \"Đ\",\r\n    \"đ\",\r\n    \"Dj\",\r\n    \"dj\",\r\n    \"a\",\r\n    \"b\",\r\n    \"v\",\r\n    \"g\",\r\n    \"d\",\r\n    \"e\",\r\n    \"ž\",\r\n    \"z\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"lj\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"ć\",\r\n    \"u\",\r\n    \"f\",\r\n    \"h\",\r\n    \"c\",\r\n    \"č\",\r\n    \"š\",\r\n    \"A\",\r\n    \"B\",\r\n    \"V\",\r\n    \"G\",\r\n    \"D\",\r\n    \"E\",\r\n    \"Ž\",\r\n    \"Z\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"Lj\",\r\n    \"M\",\r\n    \"N\",\r\n    \"Nj\",\r\n    \"O\",\r\n    \"P\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"Ć\",\r\n    \"U\",\r\n    \"F\",\r\n    \"H\",\r\n    \"C\",\r\n    \"Č\",\r\n    \"Dž\",\r\n    \"Š\",\r\n  ];\r\n  var replace = [\r\n    \"Џ\",\r\n    \"џ\",\r\n    \"Љ\",\r\n    \"љ\",\r\n    \"Њ\",\r\n    \"њ\",\r\n    \"Ђ\",\r\n    \"ђ\",\r\n    \"Ђ\",\r\n    \"ђ\",\r\n    \"а\",\r\n    \"б\",\r\n    \"в\",\r\n    \"г\",\r\n    \"д\",\r\n    \"е\",\r\n    \"ж\",\r\n    \"з\",\r\n    \"и\",\r\n    \"ј\",\r\n    \"к\",\r\n    \"л\",\r\n    \"љ\",\r\n    \"м\",\r\n    \"н\",\r\n    \"о\",\r\n    \"п\",\r\n    \"р\",\r\n    \"с\",\r\n    \"т\",\r\n    \"ћ\",\r\n    \"у\",\r\n    \"ф\",\r\n    \"х\",\r\n    \"ц\",\r\n    \"ч\",\r\n    \"ш\",\r\n    \"А\",\r\n    \"Б\",\r\n    \"В\",\r\n    \"Г\",\r\n    \"Д\",\r\n    \"Е\",\r\n    \"Ж\",\r\n    \"З\",\r\n    \"И\",\r\n    \"Ј\",\r\n    \"К\",\r\n    \"Л\",\r\n    \"Љ\",\r\n    \"М\",\r\n    \"Н\",\r\n    \"Њ\",\r\n    \"О\",\r\n    \"П\",\r\n    \"Р\",\r\n    \"С\",\r\n    \"Т\",\r\n    \"Ћ\",\r\n    \"У\",\r\n    \"Ф\",\r\n    \"Х\",\r\n    \"Ц\",\r\n    \"Ч\",\r\n    \"Џ\",\r\n    \"Ш\",\r\n  ];\r\n  text = text.replaceArray(find, replace);\r\n  return text;\r\n};\r\n","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Paragraph.js",[],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\validWords.js",[],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Note.js",[],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Form.js",[],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Button.js",[],"C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Layout.js",["73"],"import { Fragment } from \"react\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div className={classes.holy_container}>\r\n      <h2 className={classes.logo}>RECHKO FOR FRIENDS</h2>\r\n      <hr className={classes.lajna}></hr>\r\n      <div>{props.children}</div>\r\n      <p className={classes.para1}>\r\n        Developed by\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            window.open(\"https://nd-portfolio.netlify.app/\", \"_blank\");\r\n          }}\r\n          formTarget=\"_blank\"\r\n          className={classes.cortex_1}\r\n        >\r\n          Nemanja Dragaš\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\GameBoard.js",["74","75"],"import { useState, useEffect, useMemo } from \"react\";\r\n\r\nimport validWords from \"../validWords\";\r\n// import classes from \"./Game.module.css\";\r\nimport \"../App.css\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport Modal from \"./Modal\";\r\n\r\nimport win from \"../assets/win.png\";\r\nimport lost from \"../assets/lost.png\";\r\n\r\nconst GameBoard = (props) => {\r\n  const [modalMsg, setModalMsg] = useState(null);\r\n  const [modalIcon, setModalIcon] = useState(null);\r\n  const [boardData, setBoardData] = useState(\r\n    JSON.parse(localStorage.getItem(`board-data-${props.targetWord}`))\r\n  );\r\n  const [message, setMessage] = useState(null);\r\n  const [error, setError] = useState(false);\r\n  const [charArray, setCharArray] = useState([]);\r\n\r\n  const resetBoard = () => {\r\n    let newBoardData = {\r\n      ...boardData,\r\n      solution: props.targetWord,\r\n      rowIndex: 0,\r\n      boardWords: [],\r\n      boardRowStatus: [],\r\n      presentCharArray: [],\r\n      absentCharArray: [],\r\n      correctCharArray: [],\r\n      status: \"IN_PROGRESS\",\r\n    };\r\n    setBoardData(newBoardData);\r\n    localStorage.setItem(\r\n      `board-data-${props.targetWord}`,\r\n      JSON.stringify(newBoardData)\r\n    );\r\n  };\r\n\r\n  const handleMessage = (message) => {\r\n    setMessage(message);\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleError = () => {\r\n    setError(true);\r\n    setTimeout(() => {\r\n      setError(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const enterBoardWord = (word) => {\r\n    let boardWords = boardData.boardWords;\r\n    let boardRowStatus = boardData.boardRowStatus;\r\n    let solution = props.targetWord;\r\n    let presentCharArray = boardData.presentCharArray;\r\n    let absentCharArray = boardData.absentCharArray;\r\n    let correctCharArray = boardData.correctCharArray;\r\n    let rowIndex = boardData.rowIndex;\r\n    let rowStatus = [];\r\n    let matchCount = 0;\r\n    let status = boardData.status;\r\n\r\n    for (var index = 0; index < word.length; index++) {\r\n      if (solution.charAt(index) === word.charAt(index)) {\r\n        matchCount++;\r\n        rowStatus.push(\"correct\");\r\n        if (!correctCharArray.includes(word.charAt(index)))\r\n          correctCharArray.push(word.charAt(index));\r\n        if (presentCharArray.indexOf(word.charAt(index)) !== -1)\r\n          presentCharArray.splice(\r\n            presentCharArray.indexOf(word.charAt(index)),\r\n            1\r\n          );\r\n      } else if (solution.includes(word.charAt(index))) {\r\n        rowStatus.push(\"present\");\r\n        if (\r\n          !correctCharArray.includes(word.charAt(index)) &&\r\n          !presentCharArray.includes(word.charAt(index))\r\n        )\r\n          presentCharArray.push(word.charAt(index));\r\n      } else {\r\n        rowStatus.push(\"absent\");\r\n        if (!absentCharArray.includes(word.charAt(index)))\r\n          absentCharArray.push(word.charAt(index));\r\n      }\r\n    }\r\n    if (matchCount === 5) {\r\n      status = \"WIN\";\r\n\r\n      setModalMsg(\"Браво!\");\r\n      setModalIcon(win);\r\n    } else if (rowIndex + 1 === 6) {\r\n      status = \"LOST\";\r\n      setModalMsg(\"Изгубили сте.\");\r\n      setModalIcon(lost);\r\n    }\r\n    boardRowStatus.push(rowStatus);\r\n    boardWords[rowIndex] = word;\r\n    let newBoardData = {\r\n      ...boardData,\r\n      boardWords: boardWords,\r\n      boardRowStatus: boardRowStatus,\r\n      rowIndex: rowIndex + 1,\r\n      status: status,\r\n      presentCharArray: presentCharArray,\r\n      absentCharArray: absentCharArray,\r\n      correctCharArray: correctCharArray,\r\n    };\r\n    setBoardData(newBoardData);\r\n    localStorage.setItem(\r\n      `board-data-${props.targetWord}`,\r\n      JSON.stringify(newBoardData)\r\n    );\r\n  };\r\n\r\n  const enterCurrentText = (word) => {\r\n    let boardWords = boardData.boardWords;\r\n    let rowIndex = boardData.rowIndex;\r\n    boardWords[rowIndex] = word;\r\n    let newBoardData = { ...boardData, boardWords: boardWords };\r\n    setBoardData(newBoardData);\r\n  };\r\n\r\n  const handleKeyPress = (key) => {\r\n    if (boardData.rowIndex > 5 || boardData.status === \"WIN\") return;\r\n    if (key === \"ЕНТЕР\") {\r\n      if (charArray.length === 5) {\r\n        let word = charArray.join(\"\").toLowerCase();\r\n        if (!validWords.includes(word)) {\r\n          handleError();\r\n          handleMessage(\"Ријеч није на листи.\");\r\n          return;\r\n        }\r\n        enterBoardWord(word);\r\n        setCharArray([]);\r\n      } else {\r\n        handleMessage(\"Ријеч мора имати 5 слова.\");\r\n      }\r\n      return;\r\n    }\r\n    if (key === \"Дел\") {\r\n      charArray.splice(charArray.length - 1, 1);\r\n      setCharArray([...charArray]);\r\n    } else if (charArray.length < 5) {\r\n      charArray.push(key);\r\n      setCharArray([...charArray]);\r\n    }\r\n    enterCurrentText(charArray.join(\"\").toLowerCase());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!boardData || !boardData.solution) {\r\n      let newBoardData = {\r\n        ...boardData,\r\n        solution: props.targetWord,\r\n        rowIndex: 0,\r\n        boardWords: [],\r\n        boardRowStatus: [],\r\n        presentCharArray: [],\r\n        absentCharArray: [],\r\n        correctCharArray: [],\r\n        status: \"IN_PROGRESS\",\r\n      };\r\n      setBoardData(newBoardData);\r\n      localStorage.setItem(\r\n        `board-data-${props.targetWord}`,\r\n        JSON.stringify(newBoardData)\r\n      );\r\n    }\r\n  }, [boardData, props.targetWord]);\r\n\r\n  const closeModal = () => {\r\n    setModalMsg();\r\n    setModalIcon();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <p className=\"para\">Ријешите ријеч коју вам је задао/ла {props.name}.</p>\r\n      {message && <div className=\"message\">{message}</div>}\r\n      {modalMsg && (\r\n        <Modal\r\n          closeModal={closeModal}\r\n          message={modalMsg}\r\n          icon={modalIcon}\r\n          word={props.targetWord}\r\n        ></Modal>\r\n      )}\r\n      <div className=\"cube\">\r\n        {[0, 1, 2, 3, 4, 5].map((row, rowIndex) => (\r\n          <div\r\n            className={`cube-row ${\r\n              boardData && row === boardData.rowIndex && error & \"error\"\r\n            }`}\r\n          >\r\n            {[0, 1, 2, 3, 4].map((column, letterIndex) => (\r\n              <div\r\n                key={letterIndex}\r\n                className={`letter ${\r\n                  boardData && boardData.boardRowStatus[row]\r\n                    ? boardData.boardRowStatus[row][column]\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                {boardData &&\r\n                  boardData.boardWords[row] &&\r\n                  boardData.boardWords[row][column]}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <Keyboard boardData={boardData} handleKeyPress={handleKeyPress} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Keyboard.js",["76"],"import React, { useEffect } from \"react\";\r\nimport { keys } from \"../constants/constants\";\r\nimport classes from \"./Keyboard.module.css\";\r\n\r\nconst Keyboard = ({ boardData, handleKeyPress }) => {\r\n  function handleKeyboard(key) {\r\n    if (key === \"Enter\") handleKeyPress(\"ENTER\");\r\n    if (key === \"Backspace\") handleKeyPress(\"⌫\");\r\n    if (key.length === 1 && key.toLowerCase() !== key.toUpperCase())\r\n      handleKeyPress(key.toUpperCase());\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyboard);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyboard);\r\n    };\r\n  }, [handleKeyPress]);\r\n\r\n  return (\r\n    <div className={classes.keyboardRows}>\r\n      {keys.map((item, index) => (\r\n        <div className={classes.row} key={index}>\r\n          {item.map((key, keyIndex) => (\r\n            <button\r\n              key={keyIndex}\r\n              className={`${\r\n                boardData &&\r\n                boardData.correctCharArray.includes(key.toLowerCase())\r\n                  ? classes.keyCorrect\r\n                  : boardData &&\r\n                    boardData.presentCharArray.includes(key.toLocaleLowerCase())\r\n                  ? classes.keyPresent\r\n                  : boardData &&\r\n                    boardData.absentCharArray.includes(key.toLowerCase())\r\n                  ? classes.keyAbsent\r\n                  : \"\"\r\n              } `}\r\n              onClick={() => {\r\n                handleKeyPress(key);\r\n              }}\r\n            >\r\n              {key}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\components\\Modal.js",["77","78"],"import classes from \"./Modal.module.css\";\r\n\r\nimport win from \"../assets/win.png\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <div onClick={props.closeModal} className={classes.close}>\r\n        {\" \"}\r\n        X{\" \"}\r\n      </div>\r\n      <img className={classes.icon} src={props.icon} />\r\n      <h1 className={classes.header}>{props.message}</h1>\r\n      <p className={classes.para}>Ријеч је била {props.word}.</p>\r\n      <button\r\n        className={classes.btn}\r\n        type=\"button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          window.open(\"https://rechkoforfriends.com\");\r\n        }}\r\n      >\r\n        Направите нову игру\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\Nemanja Dragas\\Desktop\\Projects\\Rechko pokusaj 4\\src\\constants\\constants.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":16,"endColumn":4},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","endLine":9,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":18},{"ruleId":"87","severity":1,"message":"91","line":1,"column":31,"nodeType":"89","messageId":"90","endLine":1,"endColumn":38},{"ruleId":"87","severity":1,"message":"92","line":22,"column":9,"nodeType":"89","messageId":"90","endLine":22,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":19,"column":6,"nodeType":"95","endLine":19,"endColumn":22,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":11},{"ruleId":"98","severity":1,"message":"99","line":12,"column":7,"nodeType":"100","endLine":12,"endColumn":56},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'resetBoard' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleKeyboard'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'win' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [handleKeyPress, handleKeyboard]",{"range":"106","text":"107"},[624,640],"[handleKeyPress, handleKeyboard]"]